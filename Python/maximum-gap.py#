class Solution:
    # @param num, a list of integer
    # @return an integer
    def radixsort(self, aList):
        RADIX = 10
        maxLength = False
        tmp , placement = -1, 1
        
        while not maxLength:
            maxLength = True
            # declare and initialize buckets
            buckets = [list() for _ in range( RADIX )]
 
            # split aList between lists
            for  i in aList:
                tmp = i / placement
                buckets[tmp % RADIX].append( i )
                if maxLength and tmp > 0:
                    maxLength = False
 
            # empty lists into aList array
            a = 0
            for b in range( RADIX ):
                buck = buckets[b]
                for i in buck:
                    aList[a] = i
                    a += 1
 
            # move to next digit
            placement *= RADIX
            
            
    def maximumGap(self, num):
        n = len(num)
        
        if n<2:
            return 0
            
        self.radixsort(num)
        
        diff = abs(num[0]-num[1])
        
        for i in xrange(1, n-1):
            diff = max(diff, abs(num[i]-num[i+1]))
            
        return diff