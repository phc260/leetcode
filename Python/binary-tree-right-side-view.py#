# Definition for a  binary tree node
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    # @param root, a tree node
    # @return a list of integers
    def maxDepth(self, root):
        return (1+max(self.maxDepth(root.left), self.maxDepth(root.right))) if root else 0
        
    def inorderTraversal(self, root, level, right_view):
        if root:
            self.inorderTraversal(root.left, level+1, right_view)
            right_view[level] = root.val
                
            self.inorderTraversal(root.right, level+1, right_view)
        
    def rightSideView(self, root):
        ans = [-65535]*self.maxDepth(root)
        self.inorderTraversal(root, 0, ans)
        return ans